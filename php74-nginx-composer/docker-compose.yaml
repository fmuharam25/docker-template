version: '3.8'

networks:
  app_network:
    name: "${APP_NAME}_network"
    driver: bridge

services:

  #Database
  db:
    container_name: "${APP_NAME}_db"
    image: ${DB_VERSION}
    restart: unless-stopped
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - .docker/db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - ${APP_NAME}_network

  #APP
  app:
    container_name: "${APP_NAME}_app"
    build:
      context: ./
      dockerfile: .docker/Dockerfile
      args:
        PORT: ${APP_PORT}
        ALPINE_VERSION: ${ALPINE_VERSION}
    ports:
    - ${APP_PORT}:80
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - ./src:/var/www/html
      - .docker/config/nginx.conf:/etc/nginx/nginx.conf
      - .docker/config/fpm-pool.conf:/etc/php7/php-fpm.d/www.conf
      - .docker/config/php.ini:/etc/php7/conf.d/custom.ini
      - .docker/config/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    networks:
      - ${APP_NAME}_network
      
  #Adminer
  adminer:
    container_name: "${APP_NAME}_adminer"
    image: ${ADMINER_VERSION}
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      - ${APP_NAME}_network